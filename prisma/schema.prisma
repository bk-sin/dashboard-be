generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Role {
  id              Int              @id @default(autoincrement())
  name            String           @unique
  slug            String           @unique
  description     String?
  permissions     Json?
  isActive        Boolean          @default(true)
  createdAt       DateTime         @default(now())
  updatedAt       DateTime         @updatedAt
  rolePermissions RolePermission[]
  users           User[]
}

model RolePermission {
  id           Int        @id @default(autoincrement())
  roleId       Int
  permissionId Int
  grantedAt    DateTime   @default(now())
  grantedBy    Int?
  isActive     Boolean    @default(true)
  permission   Permission @relation(fields: [permissionId], references: [id], onDelete: Cascade)
  role         Role       @relation(fields: [roleId], references: [id], onDelete: Cascade)

  @@unique([roleId, permissionId])
}

model Permission {
  id              Int              @id @default(autoincrement())
  name            String           @unique
  description     String?
  category        String
  isActive        Boolean          @default(true)
  createdAt       DateTime         @default(now())
  updatedAt       DateTime         @updatedAt
  rolePermissions RolePermission[]
}

model User {
  id         Int      @id @default(autoincrement())
  firstName  String
  lastName   String
  email      String   @unique
  phone      String?
  password   String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  isActive   Boolean  @default(true)
  isVerified Boolean  @default(false)
  isBlocked  Boolean  @default(false)
  lastLogin  DateTime?
  roleId     Int      @default(1)
  role       Role     @relation(fields: [roleId], references: [id])
}
